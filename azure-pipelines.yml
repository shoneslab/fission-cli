# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

# Set variables once
variables:
  fission_version: 1.0-rc1
  tag_name: 0.0.4
  artifact_name: fission

steps:
- script: |
    curl -Lo fission  https://github.com/fission/fission/releases/download/$(fission_version)/fission-cli-osx
  displayName: 'Download fission-cli file'

# Archive Files
- task: ArchiveFiles@2
  displayName: "Create archive for fission-cli in tar format"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/$(artifact_name)"
    includeRootFolder: false
    archiveType: tar
    archiveFile: "$(System.DefaultWorkingDirectory)/$(artifact_name).tar"  
    replaceExistingArchive: true 

# Publish Build Artifacts
- task: PublishBuildArtifacts@1
  displayName: Publish Build Artifacts (fission tar)
  inputs:
    pathtoPublish: '$(System.DefaultWorkingDirectory)/$(artifact_name).tar' 
    artifactName: 'drop' 
  timeoutInMinutes: 1  

# GitHub Release
- task: GithubRelease@0
  inputs:
    gitHubConnection: 'github-fission-cli'
    repositoryName: 'shoneslab/fission-cli'
    action: 'create' # Options: create, edit, discard
    target: '$(build.sourceVersion)' # Required when action == create || action == edit
    tagSource: 'manual' # Required when action == create. Options: auto, manual
    tag: $(tag_name) # Required when action == edit || action == discard || tagSource == manual
    title: 'Fission CLI'   # Optional
    assets: '$(System.DefaultWorkingDirectory)/*.tar' # Optional
  

